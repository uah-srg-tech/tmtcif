grammar es.uah.aut.srg.tmtcif.lang.filter.FILTER with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/tmtcif/filter" 
import "http://srg.aut.uah.es/tmtcif/common" as common 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http://srg.aut.uah.es/tmtcif/format" as format

TMTCIFModelFile returns common::TMTCIFModelFile:
	(imports+=TMTCIFModelFileImport)*
	element=TMTCIFFilterFilter
;

TMTCIFModelFileImport returns common::TMTCIFModelFileImport: 
	'import' ':=' importURI=STRING ';'
;

TMTCIFFilterFilter returns TMTCIFFilterFilter:
	TMTCIFFilterMaxtermFilter | TMTCIFFilterMintermFilter
;

TMTCIFFilterMaxtermFilter returns TMTCIFFilterMaxtermFilter:
	'TMTCIFFilterMaxtermFilter'
	name = ID
	 '{'
		(('uri' ':=' uri=QualifiedName ';')
		& ('version' ':=' version=Version ';')
		'formatFile' ':=' formatFile=[format::TMTCIFFormatFormat|VersionedQualifiedName] ';'
		((BoolVar+=TMTCIFFilterBoolVar) | 
			(BoolVarFromArrayItem+=TMTCIFFilterBoolVarFromArrayItem) |
			(BoolVarFromGroupedArrayItem+=TMTCIFFilterBoolVarFromGroupedArrayItem) |
			(BoolVarFDIC+=TMTCIFFilterBoolVarFDIC))+)
		Maxterm+=TMTCIFFilterMaxterm+
	'}' ';'
;

TMTCIFFilterMintermFilter returns TMTCIFFilterMintermFilter:
	'TMTCIFFilterMintermFilter'
	name = ID
	 '{'
		(('uri' ':=' uri=QualifiedName ';')
		& ('version' ':=' version=Version ';')
		'formatFile' ':=' formatFile=[format::TMTCIFFormatFormat|VersionedQualifiedName] ';'
		((BoolVar+=TMTCIFFilterBoolVar) | 
		 (BoolVarFromArrayItem+=TMTCIFFilterBoolVarFromArrayItem) |
		 (BoolVarFromGroupedArrayItem+=TMTCIFFilterBoolVarFromGroupedArrayItem) |
		 (BoolVarFDIC+=TMTCIFFilterBoolVarFDIC))+)
		Minterm+=TMTCIFFilterMinterm+
	'}' ';'
;

TMTCIFFilterBoolVar returns TMTCIFFilterBoolVar:
	'TMTCIFFilterBoolVar' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=ID ';'
		'constantType' ':=' constantType=TMTCIFFilterConstantType ';'
		'FieldRef' ':=' FieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
		Op=TMTCIFFilterFieldOp
		((Constant=TMTCIFFilterConstant) |
		 (Select=TMTCIFFilterSelect) |
		 (SelectLine=TMTCIFFilterSelectLine))
	'}' ';'
;

TMTCIFFilterBoolVarFromArrayItem returns TMTCIFFilterBoolVarFromArrayItem:
	'TMTCIFFilterBoolVarFromArrayItem' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=ID ';'
		'constantType' ':=' constantType=TMTCIFFilterConstantType ';'
		'AIFieldRef' ':=' AIFieldRef=[format::TMTCIFFormatAIField|VersionedQualifiedReferenceName] ';'
		Op=TMTCIFFilterFieldOp
		((Constant=TMTCIFFilterConstant) |
		 (Select=TMTCIFFilterSelect) |
		 (SelectLine=TMTCIFFilterSelectLine))
	'}' ';'
;

TMTCIFFilterBoolVarFromGroupedArrayItem returns TMTCIFFilterBoolVarFromGroupedArrayItem:
	'TMTCIFFilterBoolVarFromGroupedArrayItem' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=ID ';'
		'constantType' ':=' constantType=TMTCIFFilterConstantType ';'
		'group' ':=' group=ID ';'
		'AIFieldRefs' ':=' AIFieldRefs=[format::TMTCIFFormatAField|VersionedQualifiedReferenceName] ';'
		Op=TMTCIFFilterFieldOp
		((Constant=TMTCIFFilterConstant) |
		 (Select=TMTCIFFilterSelect) |
		 (SelectLine=TMTCIFFilterSelectLine))
	'}' ';'
;

TMTCIFFilterBoolVarFDIC returns TMTCIFFilterBoolVarFDIC:
	'TMTCIFFilterBoolVarFDIC' '{'
		'id' ':=' id=INTEGER ';'
		'name' ':=' name=ID ';'
		'FieldRef' ':=' FieldRef=[format::TMTCIFFormatFDICField|VersionedQualifiedReferenceName] ';'
		Op=TMTCIFFilterFieldOp
	'}' ';'
;

enum TMTCIFFilterConstantType returns TMTCIFFilterConstantType:
	decimal = 'decimal' | hex = 'hex' |
	binary = 'binary' | char = 'char' | string = 'string'
;

TMTCIFFilterFieldOp returns TMTCIFFilterFieldOp:
	'TMTCIFFilterFieldOp' '{'
		'type' ':=' type=TMTCIFFilterOPType ';'
	'}' ';'
;

TMTCIFFilterConstant returns TMTCIFFilterConstant:
	'TMTCIFFilterConstant'	'{'
		'value' ':=' value=INTEGER ';'
		('mask' ':=' mask=HEXADECIMAL ';')?
	'}' ';'
;

TMTCIFFilterSelect returns TMTCIFFilterSelect:
	'TMTCIFFilterSelect' '{'
		'fromFile' ':=' fromFile=ID ';'
		'type' ':=' type=TMTCIFFilterSelectType ';'
		('offset' ':=' offset=INTEGER ';')?
		('size' ':=' size=INTEGER ';')?
		('mask' ':=' mask=HEXADECIMAL ';')?
	'}' ';'
;

TMTCIFFilterSelectLine returns TMTCIFFilterSelectLine:
	'TMTCIFFilterSelectLine'
	'{'
		'fromFile' ':=' fromFile=ID ';'
		'line' ':=' line=INTEGER ';'
		('leftTrim' ':=' leftTrim=INTEGER ';')?
		('rightTrim' ':=' rightTrim=INTEGER ';')?
		('mask' ':=' mask=HEXADECIMAL ';')?
	'}' ';'
;

enum TMTCIFFilterOPType returns TMTCIFFilterOPType:
	equal = 'equal' | different = 'different' |
	bigger_than = 'bigger_than' |
	smaller_than = 'smaller_than' |
	bigger_or_equal = 'bigger_or_equal' |
	smaller_or_equal = 'smaller_or_equal'
;

enum TMTCIFFilterSelectType returns TMTCIFFilterSelectType:
	data = 'data' | size = 'size' | crc = 'crc'
;

TMTCIFFilterMaxterm returns TMTCIFFilterMaxterm:
	'TMTCIFFilterMaxterm' '{'
		'id' ':=' id=INTEGER ';'
		(BoolVarRef+=TMTCIFFilterBoolVarRef)+  
	'}' ';'
;

TMTCIFFilterMinterm returns TMTCIFFilterMinterm:
	'TMTCIFFilterMinterm' '{'
		'id' ':=' id=INTEGER ';'
		(BoolVarRef+=TMTCIFFilterBoolVarRef)+ 
	'}' ';'
;

TMTCIFFilterBoolVarRef returns TMTCIFFilterBoolVarRef:
	'TMTCIFFilterBoolVarRef' '{'
		'idRef' ':=' idRef=INTEGER ';'
	'}' ';'
;

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;

VersionedQualifiedReferenceName returns ecore::EString:
	(VersionedQualifiedName '::')? ID ('::' ID)*;

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);
