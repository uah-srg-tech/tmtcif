grammar es.uah.aut.srg.tmtcif.lang.export.EXPORT with org.eclipse.xtext.common.Terminals

import "http://srg.aut.uah.es/tmtcif/export" 
import "http://srg.aut.uah.es/tmtcif/common" as common 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

import "http://srg.aut.uah.es/tmtcif/format" as format

TMTCIFModelFile returns common::TMTCIFModelFile:
	(imports+=TMTCIFModelFileImport)*
	element=TMTCIFExportExport
;

TMTCIFModelFileImport returns common::TMTCIFModelFileImport: 
	'import' ':=' importURI=STRING ';'
;

TMTCIFExportExport returns TMTCIFExportExport:
	'TMTCIFExportExport'
	name = ID
	 '{'
		(('uri' ':=' uri=QualifiedName ';')
		& ('version' ':=' version=Version ';'))
		'from' ':=' ('NULL' | from=[format::TMTCIFFormatFormat|VersionedQualifiedName]) ';'
		'to' ':=' to=[format::TMTCIFFormatFormat|VersionedQualifiedName] ';'
		(Sizes=TMTCIFExportSizes)? 
		settings=TMTCIFExportSettings
		(activateDICs=TMTCIFExportActivateDICs)?
	'}' ';'
;

TMTCIFExportSizes returns TMTCIFExportSizes:
	{TMTCIFExportSizes}
	'TMTCIFExportSizes' '{'
		((sizeFromFileLength+=TMTCIFExportSizeFromFileLength) |
			(sizeFromFileLine+=TMTCIFExportSizeFromFileLine) |
			(sizeInBits+=TMTCIFExportSizeInBits))+
	'}' ';'
;

enum TMTCIFExportUnit returns TMTCIFExportUnit:
	bits = 'bits' | bytes = 'bytes'
;

TMTCIFExportSizeFromFileLength returns TMTCIFExportSizeFromFileLength:
	'TMTCIFExportSizeFromFileLength' '{'
		'id' ':=' id=INTEGER ';'
		'fromFile' ':=' fromFile=ID ';'
		('addSize' ':=' addSize=INTEGER ';')?
		('unit' ':=' unit=TMTCIFExportUnit ';')?
	'}' ';'
;

TMTCIFExportSizeFromFileLine returns TMTCIFExportSizeFromFileLine:
	'TMTCIFExportSizeFromFileLine' '{'
		'id' ':=' id=INTEGER ';'
		'fromFile' ':=' fromFile=ID ';'
		'line' ':=' line=INTEGER ';'
		('addSize' ':=' addSize=INTEGER ';')?
		('unit' ':=' unit=TMTCIFExportUnit ';')?
	'}' ';'
;

TMTCIFExportSizeInBits returns TMTCIFExportSizeInBits:
	'TMTCIFExportSizeInBits' '{'
		'id' ':=' id=INTEGER ';'
		'from' ':=' from=ID ';'
		('addSize' ':=' addSize=INTEGER ';')?
		('unit' ':=' unit=TMTCIFExportUnit ';')?
	'}' ';'
;

TMTCIFExportSettings returns TMTCIFExportSettings:
	{TMTCIFExportSettings}
	'TMTCIFExportSettings' '{'
		((settingFromConst+=TMTCIFExportSettingFromConst) |
		(settingFromSize+=TMTCIFExportSettingFromSize) |
		(settingFromFile+=TMTCIFExportSettingFromFile) |
		(settingFromField+=TMTCIFExportSettingFromField) |
		(settingAIFromConst+=TMTCIFExportSettingAIFromConst) |
		(settingAIFromFile+=TMTCIFExportSettingAIFromFile))*
	'}' ';'
;

TMTCIFExportSettingFromConst returns TMTCIFExportSettingFromConst:
	'TMTCIFExportSettingFromConst' '{'
		'value' ':=' value=INTEGER ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
	'}' ';'
;
TMTCIFExportSettingFromSize returns TMTCIFExportSettingFromSize:
	'TMTCIFExportSettingFromSize' '{'
		'sizeRef' ':=' sizeRef=INTEGER ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
	'}' ';'
;

TMTCIFExportSettingFromFile returns TMTCIFExportSettingFromFile:
	'TMTCIFExportSettingFromFile' '{'
		'file' ':=' file=ID ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
		('offset' ':=' offset=INTEGER ';')?
		('size' ':=' size=INTEGER ';')?
		('line' ':=' line=INTEGER ';')?
	'}' ';'
;

TMTCIFExportSettingFromField returns TMTCIFExportSettingFromField:
	'TMTCIFExportSettingFromField' '{'
		'fieldRef' ':=' fieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatField|VersionedQualifiedReferenceName] ';'
	'}' ';'
;

TMTCIFExportSettingAIFromConst returns TMTCIFExportSettingAIFromConst:
	'TMTCIFExportSettingAIFromConst' '{'
		'value' ':=' value=INTEGER ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatAIField|VersionedQualifiedReferenceName] ';'
		'toArrayIndex' ':=' toArrayIndex=INTEGER ';'
	'}' ';'
;

TMTCIFExportSettingAIFromFile returns TMTCIFExportSettingAIFromFile:
	'TMTCIFExportSettingAIFromFile' '{'
		'file' ':=' file=ID ';'
		'toFieldRef' ':=' toFieldRef=[format::TMTCIFFormatAIField|VersionedQualifiedReferenceName] ';'
		'toArrayIndex' ':=' toArrayIndex=INTEGER ';'
		('offset' ':=' offset=INTEGER ';')?
		('size' ':=' size=INTEGER ';')?
		('line' ':=' line=INTEGER ';')?
	'}' ';'
;

TMTCIFExportActivateDICs returns TMTCIFExportActivateDICs:
	{TMTCIFExportActivateDICs}
	'TMTCIFExportActivateDICs' '{'
		(DIC+=TMTCIFExportDIC)+
	'}' ';'
;

TMTCIFExportDIC returns TMTCIFExportDIC:
	'TMTCIFExportDIC' '{'
		'id' ':=' id=INTEGER ';'
		'DICRef' ':=' DICRef=ID ';'
	'}' ';'
;

QualifiedName returns ecore::EString:
	ID ('.' ID)*;

Version returns ecore::EString:
	(INT | ((INT)? ID)) ('.' (INT | ((INT)? ID)))*
	;

VersionedQualifiedName returns ecore::EString:
	QualifiedName '(' Version ')'
	;

VersionedQualifiedReferenceName returns ecore::EString:
	(VersionedQualifiedName '::')? ID ('::' ID)*;

terminal HEXADECIMAL returns ecore::EString:
	('0x' (('0'..'9') | ('a'..'f') | ('A'..'F'))+);

INTEGER returns ecore::EString:
	('-'? INT | HEXADECIMAL);